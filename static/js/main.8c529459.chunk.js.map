{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","auth","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","nweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","fileInput","useRef","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","current","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c529459.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();","import { useState } from \"react\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value);\n        }else if(name===\"password\"){\n            setPassword(value);\n        }\n    }\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try{\n            const auth = getAuth();\n            let data;\n            if(newAccount){\n                data = await createUserWithEmailAndPassword(auth, email, password);\n            } else {\n                data = await signInWithEmailAndPassword(auth, email, password);\n            }\n            console.log(data)\n        } catch (error) {\n            setError(error.message);\n        }\n        \n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm;","import { signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from 'firebase/auth';\nimport { authService } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new GithubAuthProvider();\n        }\n        const data = await signInWithPopup(authService, provider)\n        console.log(data)\n    }\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n            icon={faTwitter}\n            color={\"#04AAFF\"}\n            size=\"3x\"\n            style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n};\nexport default Auth;","import { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { ref, deleteObject } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const nweetTextRef = doc(dbService, \"nweets\", `${nweetObj.id}`);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok){\n            await deleteDoc(nweetTextRef);\n            await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(nweetObj, newNweet);\n        await updateDoc(nweetTextRef, {\n            text: newNweet,\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const { \n            target: { value },\n        } = event;\n        setNewNweet(value)\n    }\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input onChange={onChange} type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required autoFocus className=\"formInput\" />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n};\n\nexport default Nweet;","import { useState, useRef } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const response = await uploadString(attachmentRef, attachment, \"data_url\");\n            attachmentUrl = await getDownloadURL(attachmentRef);\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        \n        await addDoc(collection(dbService, \"nweets\"), nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const { target: {value} } = event;\n        setNweet(value);\n    }\n    const onFileChange = (event) => {\n        const { target: { files }} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const { \n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    }\n    const fileInput = useRef();\n    const onClearAttachment = () => {\n        setAttachment(\"\");\n        fileInput.current.value = \"\";\n    };\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                        backgroundImage: attachment,\n                        }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n            </form>\n    )\n};\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\nimport { dbService } from \"fbase\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport { useState, useEffect, useRef } from \"react\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    const fileInput = useRef();\n    useEffect(() => {\n        const q = query(\n            collection(dbService, \"nweets\"),\n            orderBy(\"createdAt\", \"desc\")\n        );\n        onSnapshot(q, (snapshot) => {\n            console.log(q, snapshot);\n            const nweetArr = snapshot.docs.map((doc) => ({\n                id:doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArr);\n        });\n    }, []);\n    \n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","import { useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\nimport { collection, getDocs, orderBy, query, where } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async() => {\n        const q = query (\n            collection(dbService, \"nweets\"),\n            where(\"creatorId\", \"==\", userObj.uid),\n            orderBy(\"createdAt\", \"desc\")\n        );\n        const querySnapshot = await getDocs(q);\n        querySnapshot.forEach((doc) => {\n        console.log(doc.id, \" => \", doc.data());\n        });\n    }\n    const onChange = (event) => {\n        const { target: {value} } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await updateProfile(authService.currentUser, { displayName: newDisplayName });\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                onChange={onChange}\n                type=\"text\"\n                autoFocus\n                placeholder=\"Display name\"\n                value={newDisplayName}\n                className=\"formInput\"\n                />\n                <input\n                type=\"submit\"\n                value=\"Update Profile\"\n                className=\"formBtn\"\n                style={{\n                    marginTop: 10,\n                }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                    >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                        ? `${userObj.displayName}의 Profile`\n                        : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n)\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                    </div> \n                ) : ( \n                    <>\n                        <Route exact path=\"/\"> \n                            <Auth />\n                        </Route>\n                    </>\n                    )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  },[]);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n    });\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n        ) : (\n          \"Initializing...\"\n        )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}